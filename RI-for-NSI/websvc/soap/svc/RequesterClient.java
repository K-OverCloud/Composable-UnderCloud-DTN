
package com.netmng.websvc.soap.svc;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */
import java.util.ArrayList;
import java.util.List;

/*import com.netmng.websvc.soap.param.types.QueryOperationType;*/
import com.netmng.websvc.soap.svc.Requester;
import com.netmng.websvc.soap.svc.param.requester.Query;

/**
 * This class was generated by Apache CXF 2.2.12
 * Thu Mar 29 19:18:29 KST 2012
 * Generated source version: 2.2.12
 * 
 */

public final class RequesterClient {

    public static void main(String args[]) throws Exception {
        
        Requester requester = new Requester();
        
        /*
        ReserveConfirmed param = new ReserveConfirmed();
        param.setCorrelationId("gnos111");
        param.setRequesterNSA("gnos1");
        param.setProviderNSA("kisti");
        param.setGlobalReservationId("gnos");
        param.setConnectionId("urn:uuid:1234 ");
        //param.setStartTime(DatatypeFactory.newInstance().newXMLGregorianCalendar(new GregorianCalendar(2012, 4, 1)));
        //param.setEndTime(DatatypeFactory.newInstance().newXMLGregorianCalendar(new GregorianCalendar(2012, 5, 1)));
        //param.setDesired(1);
        //param.setMinimum(1);
        //param.setMaximum(10);
        param.setDirectionality(DirectionalityType.BIDIRECTIONAL);
        param.setSourceStpId("krlight.ets:ps-80, krlight.ets:ps-81, krlight.ets:ps-82, krlight.ets:ps-83");
        param.setDestStpId("krlight.ets:chi-80, krlight.ets:chi-81, krlight.ets:chi-82, krlight.ets:chi-83");
       
        
        System.out.println(requester.reserveConfirmed(param));
        */
        /*
        ReserveFailed param = new ReserveFailed();
        
        param.setCorrelationId("gnos1");
        param.setRequesterNSA("gnos1");
        param.setProviderNSA("kisti");
        param.setConnectionId("urn:uuid:1234 ");
        param.setConnectionState(ConnectionStateType.INITIAL);
        param.setErrorId("error01");
        param.setErrorText("아직 준비중입니다.");
        
        System.out.println(requester.reserveFailed(param));
        */
        
        /*
        ProvisionConfirmed param = new ProvisionConfirmed();
        
        param.setCorrelationId("gnos1");
        param.setRequesterNSA("gnos1");
        param.setProviderNSA("kisti");
        param.setGlobalReservationId("gnos");
        param.setConnectionId("urn:uuid:1234 ");
        
        System.out.println(requester.provisionConfirmed(param));
        */
        
        /*
        ProvisionFailed param = new ProvisionFailed();
        
        param.setCorrelationId("gnos1");
        param.setRequesterNSA("gnos1");
        param.setProviderNSA("kisti");
        param.setConnectionId("urn:uuid:1234 ");
        param.setConnectionState(ConnectionStateType.INITIAL);
        param.setErrorId("error01");
        param.setErrorText("아직 준비중입니다.");
        
        System.out.println(requester.provisionFailed(param));
        */
        
        /*
        ReleaseConfirmed param = new ReleaseConfirmed();
        
        param.setCorrelationId("gnos1");
        param.setRequesterNSA("gnos1");
        param.setProviderNSA("kisti");
        param.setGlobalReservationId("gnos");
        param.setConnectionId("urn:uuid:1234 ");
        
        System.out.println(requester.releaseConfirmed(param));
        */
        
        /*
        ReleaseFailed param = new ReleaseFailed();
        
        param.setCorrelationId("gnos1");
        param.setRequesterNSA("gnos1");
        param.setProviderNSA("kisti");
        param.setConnectionId("urn:uuid:1234 ");
        param.setConnectionState(ConnectionStateType.INITIAL);
        param.setErrorId("error01");
        param.setErrorText("아직 준비중입니다.");
        
        System.out.println(requester.releaseFailed(param));
        */
        /*
        TerminateConfirmed param = new TerminateConfirmed();
        
        param.setCorrelationId("gnos1");
        param.setRequesterNSA("gnos1");
        param.setProviderNSA("kisti");
        param.setGlobalReservationId("gnos");
        param.setConnectionId("urn:uuid:1234 ");
        
        System.out.println(requester.terminateConfirmed(param));
        */
        /*
        TerminateFailed param = new TerminateFailed();
        
        param.setCorrelationId("gnos1");
        param.setRequesterNSA("gnos1");
        param.setProviderNSA("kisti");
        param.setConnectionId("urn:uuid:1234 ");
        param.setConnectionState(ConnectionStateType.INITIAL);
        param.setErrorId("error01");
        param.setErrorText("아직 준비중입니다.");
        
        System.out.println(requester.terminateFailed(param));
        */
        
        Query param = new Query();
        
        param.setCorrelationId("gnos2");
        param.setReplyTo("112.216.233.235");
        param.setRequesterNSA("gnos2");
        param.setProviderNSA("kisti");
        /*param.setOperation(QueryOperationType.SUMMARY);*/
        
        List<String> connectionId = new ArrayList<String>();
        connectionId.add("urn:uuid:aaaa1111-aaaa-aaaa-aaaa-aaaaaaaaaaaa");
        param.setConnectionId(connectionId);
        
        List<String> globalReservationId = new ArrayList<String>();
        globalReservationId.add("gnos");
        param.setGlobalReservationId(globalReservationId);
        
        System.out.println(requester.query(param));
        
       /*
        QueryConfirmed param = new QueryConfirmed();
        param.setCorrelationId("gnos2");
        param.setRequesterNSA("gnos2");
        param.setProviderNSA("kisti");
        System.out.println(requester.queryConfirmed(param));
        */
        /*
        QueryFailed param = new QueryFailed();
        param.setCorrelationId("gnos2");
        param.setRequesterNSA("gnos2");
        param.setProviderNSA("kisti");
        param.setErrorId("error01");
        param.setErrorText("아직 준비중입니다.");

        System.out.println(requester.queryFailed(param));
        */
        /*
        ForcedEnd param = new ForcedEnd();
        param.setCorrelationId("gnos1");
        param.setRequesterNSA("gnos1");
        param.setProviderNSA("kisti");
        param.setConnectionId("urn:uuid:1234 ");
        System.out.println(requester.forcedEnd(param));
        */
        System.exit(0);
    }

}
